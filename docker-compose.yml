version: '3.1'
# Define services
services:
  # App server`
  stack-push-pop-service:
    # Configuration for building the docker image for the backend service
   # build:
      #context: stack-push-pop-service # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      #dockerfile: Dockerfile
    build:  ./stack-push-pop-service
    image: stack-push-pop:6.0.2
    ports:
      - "8000:8000" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on: 
      - postgresqldb # This service depends on postgres. Start that first.
    environment: # Pass environment variables to the service
        POSTGRES_HOST: postgresqldb
   #   SPRING_DATASOURCE_URL: jdbc:mysql://postgresqldb:3306/postgres?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
    #  SPRING_DATASOURCE_USERNAME: postgres
    #  SPRING_DATASOURCE_PASSWORD: postgres     
        #POSTGRES_HOST: postgresqldb
        #POSTGRES_DB: postgres
       # POSTGRES_USER: postgres
       # POSTGRES_PASSWORD: postgres
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
       backend:
       stack-push-pop-service:
     

  # Client Service 
  stackimplementation-service:
 #   build:
   #   context: StackImplementation-service # Use an image built from the specified dockerfile in the `polling-app-client` directory.
 #     dockerfile: Dockerfile
    build:  ./StackImplementation-service
    image: stackimplementation:6.0.2
    ports:
      - "8081:8081" # Forward the exposed port 8081 on the container to port 8081 on the host machine
    restart: always
    depends_on:
      - stack-push-pop-service
    environment:
       STACK_PUSH_POP: stack-push-pop-service
    networks:
      stack-push-pop-service:

  # Database Service (postgres)
  postgresqldb:
    image: postgres:9.6-alpine 
    ports:
      - "5432:5432"
    restart: always
    environment:
       POSTGRES_DB: postgres
       POSTGRES_USER: postgres
       POSTGRES_PASSWORD: postgres
    networks:
     - backend
     
     
networks:
      backend:
      stack-push-pop-service:   
