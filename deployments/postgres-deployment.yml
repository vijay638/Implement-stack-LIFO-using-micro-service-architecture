---
# Define a 'Service' To Expose postgres to Other Services
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
    tier: database
spec:
  ports:
    - nodePort: 30167
      port: 5432
      targetPort: 5432
  selector:
    app: postgres
    tier: database
  type: NodePort 
  #clusterIP: None

---
# Define a 'Persistent Voulume Claim'(PVC) for Postgress Storage, dynamically provisioned by cluster
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim # name of PVC essential for identifying the storage data
  labels:
    app: postgres
    tier: database
spec:
  accessModes:
    - ReadWriteOnce   #This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 1Gi    #This will tell kubernetes about the amount of space we are trying to claim.

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
    tier: database

spec:
  selector: # mysql Pod Should contain same labels
    matchLabels:
      app: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: postgres
        tier: database
    spec:
      containers:
        - name: postgres
          image: postgres:9.6-alpine
        #  imagePullPolicy: "IfNotPresent"
          env:
            - name: POSTGRES_USER
              value : postgres
            - name: POSTGRES_PASSWORD
              value : postgres
            - name: POSTGRES_DB # Setting Database Name from a 'ConfigMap'
              value : postgres

          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-persistance-storage
      volumes:
        - name: postgres-persistance-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim